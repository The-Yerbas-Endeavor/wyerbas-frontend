{"version":3,"sources":["SolController.jsx","BscController.jsx","FadeInSection.jsx","assets/img/wyerb.png","assets/img/splash.png","App.jsx","index.jsx"],"names":["TOKEN_PUB_KEY","web3","connection","toSatoshi","x","xs","toFixed","substr","length","slice","fromSatoshi","integer","fractional","padStart","BigInt","toString","replace","sha256","data","crypto","createHash","update","digest","isValidYerbascoinAddress","raw","bs58","decode","checksum","equals","OnboardingButton","props","React","useState","wallet","setWallet","undefined","account","setAccount","onWalletButtonClick","a","provider","window","open","connect","then","onWalletChange","getTokenAccountsByOwner","publicKey","mint","accounts","value","onAccountChange","catch","console","log","onAccountButtonClick","splToken","getAssociatedTokenAddress","accountPubKey","tx","add","createAssociatedTokenAccountInstruction","getRecentBlockhash","recentBlockhash","blockhash","feePayer","signAndSendTransaction","signature","confirmTransaction","className","disabled","onClick","toBase58","SolController","AUTHORITY_NODES","location","port","authorityLink","post","link","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","setProvider","useEffect","solana","isPhantom","aliveNodes","setAliveNodes","randAuthorityLink","node","Math","floor","random","alive","i","push","parseInt","mintDepositAddresses","setMintDepositAddresses","hasMintDepositAddress","setHasMintDepositAddress","isCreatingMintDepositAddress","setIsCreatingMintDepositAddress","burnAmount","setBurnAmount","burnDestination","setBurnDestination","burnHistory","setBurnHistory","stableAuthorityLink","stats","setStats","selectedWallet","selectedAccount","pubkey","refresh","mintAddress","mintBalance","depositAddress","unconfirmedAmount","depositedAmount","approvedAmount","getSignaturesForAddress","filter","confirmationStatus","memo","split","map","tokens","burnSignature","Promise","all","burnHistories","every","status","refreshLoop","onCreateDepositAddress","alert","generateDepositAddressResponses","registerMintDepositAddressResponses","Error","onBurn","parseFloat","createBurnInstruction","keys","isSigner","isWritable","programId","Buffer","from","onWithdraw","burn","authorityNode","target","rel","href","style","color","onChange","e","placeholder","test","burnIndex","includes","unconfirmedUtxos","totalChangeBalance","totalDepositsBalance","confirmedDeposits","totalApprovedAmount","remainingApprovableAmount","unconfirmedDeposits","totalDepositedAmount","withdrawals","isValidYerbasAddress","walletAddress","CONTRACT_ADDRESS","CONTRACT_ABI","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","buttonText","setButtonText","onboarding","useRef","current","MetaMaskOnboarding","isMetaMaskInstalled","ethereum","request","acc","Web3","utils","toChecksumAddress","startOnboarding","BscController","contract","eth","Contract","mintedAmount","burnAddress","maxLength","max","reverse","methods","totalSupply","call","onMint","mintTransactionInfos","Array","fill","r","availableMintTransactionInfos","nonce","mintAmount","signV","onContractVerification","v","signR","signS","s","params","to","encodeABI","Number","Container","placeHolder","totalApprovableAmount","FadeInSection","isVisible","setVisible","domRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","unobserve","ref","children","App","setController","Navbar","bg","expand","sticky","Brand","alt","src","YerbasLogo","Toggle","Collapse","Nav","Link","id","DropdownButton","title","Dropdown","Item","Row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d9a1d69.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as web3 from \"@solana/web3.js\";\r\nimport * as splToken from \"@solana/spl-token\";\r\nimport BigInt from \"big-integer\";\r\nimport bs58 from \"bs58\";\r\nimport crypto from \"crypto\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst TOKEN_PUB_KEY = new web3.PublicKey(\r\n  \"6VYF5jXq6rfq4QRgGMG6co7b1Ev1Lj7KSbHBxfQ9e1L3\"\r\n);\r\nconst connection = new web3.Connection(\r\n  web3.clusterApiUrl(\"mainnet-beta\"),\r\n  \"confirmed\"\r\n);\r\n\r\nconst DECIMALS = 8;\r\n\r\nconst toSatoshi = (x) => {\r\n  let xs = x.toFixed(DECIMALS);\r\n  xs = xs.substr(0, xs.length - DECIMALS - 1) + xs.slice(xs.length - DECIMALS);\r\n  return xs;\r\n};\r\n\r\nconst numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nconst fromSatoshi = (xs) => {\r\n  let integer = xs.slice(0, xs.length - DECIMALS);\r\n  if (integer === \"\") {\r\n    integer = \"0\";\r\n  }\r\n\r\n  const fractional = xs.slice(xs.length - DECIMALS).padStart(DECIMALS, \"0\");\r\n  if (BigInt(fractional) >= 50000000) {\r\n    integer = (BigInt(integer) + BigInt(\"1\")).toString();\r\n  }\r\n\r\n  return integer === \"\" ? \"0\" : numberWithCommas(integer);\r\n};\r\n\r\nfunction sha256(data) {\r\n  return crypto.createHash(\"sha256\").update(data).digest();\r\n}\r\n\r\nconst isValidYerbascoinAddress = (x) => {\r\n  const raw = bs58.decode(x);\r\n  if (raw.length !== 25) {\r\n    return false;\r\n  }\r\n  if (raw[0] !== 0x16 && raw[0] !== 0x1e) {\r\n    return false;\r\n  }\r\n  const checksum = sha256(sha256(raw.slice(0, 21)));\r\n  return raw.slice(21, 25).equals(checksum.slice(0, 4));\r\n};\r\n\r\nfunction OnboardingButton(props) {\r\n  const [wallet, setWallet] = React.useState(null);\r\n  const [account, setAccount] = React.useState(undefined);\r\n\r\n  const onWalletButtonClick = async () => {\r\n    if (props.provider === null) {\r\n      window.open(\"https://phantom.app/\", \"_blank\");\r\n    } else {\r\n      await props.provider\r\n        .connect()\r\n        .then(async (x) => {\r\n          setWallet(x);\r\n          if (props.onWalletChange) {\r\n            props.onWalletChange(x);\r\n          }\r\n\r\n          const accounts = await connection.getTokenAccountsByOwner(\r\n            x.publicKey,\r\n            { mint: TOKEN_PUB_KEY }\r\n          );\r\n          if (accounts.value.length > 0) {\r\n            setAccount(accounts.value[0]);\r\n            props.onAccountChange(accounts.value[0]);\r\n          } else {\r\n            setAccount(null);\r\n            props.onAccountChange(null);\r\n          }\r\n        })\r\n        .catch(console.log);\r\n    }\r\n  };\r\n\r\n  const onAccountButtonClick = async () => {\r\n    // Retrieve token account pubkey.\r\n    const accountPubKey = await splToken.Token.getAssociatedTokenAddress(\r\n      splToken.ASSOCIATED_TOKEN_PROGRAM_ID,\r\n      splToken.TOKEN_PROGRAM_ID,\r\n      TOKEN_PUB_KEY,\r\n      wallet.publicKey\r\n    );\r\n\r\n    // Prepare transaction.\r\n    const tx = new web3.Transaction().add(\r\n      splToken.Token.createAssociatedTokenAccountInstruction(\r\n        splToken.ASSOCIATED_TOKEN_PROGRAM_ID,\r\n        splToken.TOKEN_PROGRAM_ID,\r\n        TOKEN_PUB_KEY,\r\n        accountPubKey,\r\n        wallet.publicKey,\r\n        wallet.publicKey\r\n      )\r\n    );\r\n    tx.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\r\n    tx.feePayer = wallet.publicKey;\r\n\r\n    // Sign and send.\r\n    const { signature } = await props.provider.signAndSendTransaction(tx);\r\n    await connection.confirmTransaction(signature);\r\n\r\n    // Refresh list.\r\n    const accounts = await connection.getTokenAccountsByOwner(\r\n      wallet.publicKey,\r\n      { mint: TOKEN_PUB_KEY }\r\n    );\r\n    if (accounts.value.length > 0) {\r\n      setAccount(accounts.value[0]);\r\n      props.onAccountChange(accounts.value[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"button button3\"\r\n        disabled={wallet !== null ? true : false}\r\n        onClick={onWalletButtonClick}\r\n      >\r\n        {props.provider === null\r\n          ? \"Click here to install Phantom wallet!\"\r\n          : wallet === null\r\n          ? \"Connect Phantom wallet to convert\"\r\n          : wallet.publicKey.toBase58()}\r\n      </button>\r\n      <br /> <br />\r\n      <p className=\"warning\">\r\n        <small>WARNING:<br />\r\n        SOL's SPL token is currently experiencing some bugs in minting.<br />\r\n        Hence, all mints will be suspended until SOL fixes the bug.<br /> <br />\r\n        Please REFRAIN FROM DEPOSITING YOUR Yerbas.<br /> <br />\r\n        If you have deposited Yerbas but your wYerbas did not get minted, please contact us on Discord.\r\n      </small>\r\n      </p>\r\n      {typeof account !== \"undefined\" && (\r\n        <button\r\n          className=\"button button3 mb-4\"\r\n          disabled={account !== null ? true : false}\r\n          onClick={onAccountButtonClick}\r\n        >\r\n          {account === null\r\n            ? \"Create wYerbas token account to convert\"\r\n            : \"wYerbas token account found for wallet\"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// { location: \"n7.yerbas.org\", port: 8443 }, // dead node removed\r\nfunction SolController() {\r\n  const AUTHORITY_NODES = [\r\n    { location: \"n5.yerbas.org\", port: 8443 },\r\n    { location: \"n6.yerbas.org\", port: 8443 },\r\n    { location: \"n8.yerbas.org\", port: 8443 },\r\n    { location: \"n9.yerbas.org\", port: 8443 },\r\n    { location: \"n10.yerbas.org\", port: 8443 },\r\n  ];\r\n  const authorityLink = (x) => {\r\n    return `https://${x.location}:${x.port}`;\r\n  };\r\n\r\n  async function post(link, data) {\r\n    const controller = new AbortController();\r\n    setTimeout(() => controller.abort(), 5000);\r\n    return (\r\n      await fetch(link, {\r\n        withCredentials: true,\r\n        method: \"POST\",\r\n        signal: controller.signal,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    ).json();\r\n  }\r\n\r\n  const [provider, setProvider] = React.useState(null);\r\n  React.useEffect(() => {\r\n    if (\"solana\" in window) {\r\n      const provider = window.solana;\r\n      if (provider.isPhantom) {\r\n        setProvider(provider);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const [wallet, setWallet] = React.useState(null);\r\n  const [account, setAccount] = React.useState(null);\r\n\r\n  const [aliveNodes, setAliveNodes] = React.useState(null);\r\n  const randAuthorityLink = () => {\r\n    const node =\r\n      AUTHORITY_NODES[\r\n        aliveNodes[Math.floor(Math.random() * aliveNodes.length)]\r\n      ];\r\n    return `https://${node.location}:${node.port}`;\r\n  };\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (aliveNodes === null) {\r\n        const alive = [];\r\n        for (const i in AUTHORITY_NODES) {\r\n          await post(`${authorityLink(AUTHORITY_NODES[i])}/ping`)\r\n            .then(() => {\r\n              alive.push(parseInt(i));\r\n            })\r\n            .catch(() => {});\r\n        }\r\n        setAliveNodes(alive);\r\n      }\r\n    })();\r\n  });\r\n\r\n  const [mintDepositAddresses, setMintDepositAddresses] = React.useState([]);\r\n  const [hasMintDepositAddress, setHasMintDepositAddress] =\r\n    React.useState(null);\r\n  const [isCreatingMintDepositAddress, setIsCreatingMintDepositAddress] =\r\n    React.useState(false);\r\n\r\n  const [burnAmount, setBurnAmount] = React.useState(\"\");\r\n  const [burnDestination, setBurnDestination] = React.useState(\"\");\r\n  const [burnHistory, setBurnHistory] = React.useState(null);\r\n\r\n  const stableAuthorityLink = () => {\r\n    const node = AUTHORITY_NODES[5];\r\n    return `https://${node.location}:${node.port}`;\r\n  };\r\n  const [stats, setStats] = React.useState(null);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (aliveNodes !== null && stats === null && (5 in aliveNodes)) {\r\n        const stats = (await post(`${stableAuthorityLink()}/stats`)).data;\r\n        console.log(stats);\r\n        setStats(stats);\r\n      }\r\n    })();\r\n  }, [aliveNodes, stats]);\r\n\r\n  const onWalletChange = async (selectedWallet) => {\r\n    setWallet(selectedWallet.publicKey.toBase58());\r\n  };\r\n  const onAccountChange = async (selectedAccount) => {\r\n    if (selectedAccount !== null) {\r\n      setAccount(selectedAccount.pubkey.toBase58());\r\n    }\r\n  };\r\n\r\n  const refresh = async () => {\r\n    const mintBalance = (\r\n      await post(`${randAuthorityLink()}/queryMintBalance`, {\r\n        mintAddress: wallet,\r\n      })\r\n    ).data;\r\n    if (mintBalance !== null && mintBalance !== undefined) {\r\n      setMintDepositAddresses([\r\n        {\r\n          depositAddress: mintBalance.depositAddress,\r\n          unconfirmedAmount: mintBalance.unconfirmedAmount,\r\n          depositedAmount: mintBalance.depositedAmount,\r\n          approvedAmount: mintBalance.approvedAmount,\r\n        },\r\n      ]);\r\n      setHasMintDepositAddress(true);\r\n    } else {\r\n      setMintDepositAddresses([]);\r\n      setHasMintDepositAddress(false);\r\n    }\r\n\r\n    // Retrieve burns from chain.\r\n    let burnHistory = await connection.getSignaturesForAddress(\r\n      new web3.PublicKey(wallet)\r\n    );\r\n    burnHistory = burnHistory.filter(\r\n      (x) =>\r\n        (x.confirmationStatus === \"finalized\" ||\r\n          x.confirmationStatus === \"confirmed\") &&\r\n        x.memo !== null\r\n    );\r\n    burnHistory = burnHistory.filter(\r\n      (x) =>\r\n        x.memo.split(\" \").length === 2 &&\r\n        x.memo.split(\" \")[1].split(\"|\").length === 3\r\n    );\r\n    burnHistory = burnHistory.map((x) => {\r\n      const tokens = x.memo.split(\" \")[1].split(\"|\");\r\n      return {\r\n        burnDestination: tokens[1],\r\n        burnAmount: tokens[2],\r\n        burnSignature: x.signature,\r\n      };\r\n    });\r\n    burnHistory = burnHistory.filter(\r\n      (x) => BigInt(x.burnAmount) >= toSatoshi(100000)\r\n    );\r\n\r\n    // Retrieve burnHistory records from nodes.\r\n    const burnHistories = (\r\n      await Promise.all(\r\n        aliveNodes\r\n          .map((i) => AUTHORITY_NODES[i])\r\n          .map((x, i) =>\r\n            post(`${authorityLink(x)}/queryBurnHistory`, {\r\n              burnHistory: burnHistory,\r\n            })\r\n          )\r\n      )\r\n    ).map((x) => x.data.burnHistory);\r\n\r\n    for (let i = 0; i < burnHistory.length; i++) {\r\n      if (burnHistories.every((x) => x[i].status === \"APPROVED\")) {\r\n        burnHistory[i].status = \"APPROVED\";\r\n      } else if (\r\n        burnHistories.every(\r\n          (x) => x[i].status === \"APPROVED\" || x[i].status === \"SUBMITTED\"\r\n        )\r\n      ) {\r\n        burnHistory[i].status = \"SUBMITTED\";\r\n      } else {\r\n        burnHistory[i].status = null;\r\n      }\r\n    }\r\n\r\n    setBurnHistory(burnHistory);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (aliveNodes === null) {\r\n        const alive = [];\r\n        for (const i in AUTHORITY_NODES) {\r\n          await post(`${authorityLink(AUTHORITY_NODES[i])}/ping`)\r\n            .then(() => {\r\n              alive.push(parseInt(i));\r\n            })\r\n            .catch(() => {});\r\n        }\r\n        setAliveNodes(alive);\r\n      }\r\n    })();\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (wallet !== null && account !== null && aliveNodes !== null) {\r\n      const refreshLoop = () => {\r\n        refresh();\r\n        setTimeout(refreshLoop, 10000);\r\n      };\r\n      refreshLoop();\r\n    }\r\n  }, [wallet, account, aliveNodes]);\r\n\r\n  const onCreateDepositAddress = async () => {\r\n    if (aliveNodes.length < AUTHORITY_NODES.length) {\r\n      alert(\r\n        \"Creating a deposit address requires all authority nodes to be online.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    setIsCreatingMintDepositAddress(true);\r\n    const generateDepositAddressResponses = await Promise.all(\r\n      AUTHORITY_NODES.map(async (x) => {\r\n        return await post(`${authorityLink(x)}/generateDepositAddress`, {\r\n          mintAddress: wallet,\r\n        });\r\n      })\r\n    );\r\n\r\n    const registerMintDepositAddressResponses = await Promise.all(\r\n      AUTHORITY_NODES.map(\r\n        async (x) =>\r\n          (\r\n            await post(`${authorityLink(x)}/registerMintDepositAddress`, {\r\n              mintAddress: wallet,\r\n              generateDepositAddressResponses: generateDepositAddressResponses,\r\n            })\r\n          ).data\r\n      )\r\n    );\r\n\r\n    if (\r\n      !registerMintDepositAddressResponses.every(\r\n        (x) =>\r\n          x.depositAddress ===\r\n          registerMintDepositAddressResponses[0].depositAddress\r\n      )\r\n    ) {\r\n      throw new Error(\"Consensus failure on deposit address\");\r\n    }\r\n\r\n    await refresh();\r\n    setIsCreatingMintDepositAddress(false);\r\n  };\r\n\r\n  const onBurnDestinationChange = (e) => {\r\n    setBurnDestination(e.target.value.replace(/\\s+/, \"\"));\r\n  };\r\n\r\n  const onBurnAmountChange = (e) => {\r\n    if (/^\\d*\\.?\\d{0,8}$/.test(e.target.value)) {\r\n      setBurnAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const onBurn = async () => {\r\n    if (!isValidYerbascoinAddress(burnDestination)) {\r\n      alert(\"Burn destination is not a valid Yerbas address!\");\r\n      return;\r\n    }\r\n\r\n    if (parseFloat(burnAmount) < 100000) {\r\n      alert(\"Burn amount must be at least 100,000.\");\r\n      return;\r\n    }\r\n\r\n    // Populate tx details.\r\n    const tx = new web3.Transaction();\r\n    tx.add(\r\n      splToken.Token.createBurnInstruction(\r\n        splToken.TOKEN_PROGRAM_ID,\r\n        TOKEN_PUB_KEY,\r\n        new web3.PublicKey(account),\r\n        new web3.PublicKey(wallet),\r\n        [],\r\n        toSatoshi(parseFloat(burnAmount))\r\n      )\r\n    );\r\n    tx.add(\r\n      new web3.TransactionInstruction({\r\n        keys: [\r\n          {\r\n            pubkey: new web3.PublicKey(wallet),\r\n            isSigner: true,\r\n            isWritable: false,\r\n          },\r\n        ],\r\n        programId: new web3.PublicKey(\r\n          \"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"\r\n        ),\r\n        data: Buffer.from(\r\n          \"BURN|\" + burnDestination + \"|\" + toSatoshi(parseFloat(burnAmount))\r\n        ),\r\n      })\r\n    );\r\n    tx.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\r\n    tx.feePayer = new web3.PublicKey(wallet);\r\n\r\n    // Sign and send.\r\n    const { signature } = await provider.signAndSendTransaction(tx);\r\n    await connection.confirmTransaction(signature);\r\n\r\n    await refresh();\r\n  };\r\n\r\n  const onWithdraw = async (burn) => {\r\n    for (const authorityNode of AUTHORITY_NODES) {\r\n      await post(`${authorityLink(authorityNode)}/submitWithdrawal`, {\r\n        burn: burn,\r\n      });\r\n    }\r\n\r\n    await refresh();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Container>\r\n          <a\r\n            className=\"button button2\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`https://solscan.io/token/${TOKEN_PUB_KEY}`}\r\n          >\r\n            wYerbas (SOL) SPL Token\r\n          </a>\r\n          <a\r\n            className=\"button button4\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href=\"https://yerbas.org\"\r\n          >\r\n            Visit Yerbas\r\n          </a>\r\n          <br />\r\n          <br />\r\n          <OnboardingButton\r\n            provider={provider}\r\n            onWalletChange={onWalletChange}\r\n            onAccountChange={onAccountChange}\r\n          />\r\n        </Container>\r\n      </header>\r\n\r\n      {wallet && account && aliveNodes && (\r\n        <div>\r\n          <hr />\r\n          <section className=\"section-b\">\r\n            <h3>\r\n              Convert{\" \"}\r\n              <a target=\"_blank\" href=\"https://yerbas.org\" rel=\"noreferrer\">\r\n                Yerbas\r\n              </a>{\" \"}\r\n              → wYerbas\r\n            </h3>\r\n            {hasMintDepositAddress === null && <div className=\"loader\"></div>}\r\n            {hasMintDepositAddress === false &&\r\n              aliveNodes !== null &&\r\n              aliveNodes.length === AUTHORITY_NODES.length && (\r\n                <div>\r\n                  {!isCreatingMintDepositAddress ? (\r\n                    <p>\r\n                      <button onClick={onCreateDepositAddress}>\r\n                        Create your Yerbas deposit address\r\n                      </button>\r\n                    </p>\r\n                  ) : (\r\n                    <div className=\"loader\"></div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            {hasMintDepositAddress === false &&\r\n              aliveNodes !== null &&\r\n              aliveNodes.length !== AUTHORITY_NODES.length && (\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>\r\n                    <b>\r\n                      Temporarily unable to create deposit address: all\r\n                      authority nodes required to be online.\r\n                    </b>\r\n                  </span>\r\n                </p>\r\n              )}\r\n            {hasMintDepositAddress === true && (\r\n              <div>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"long-header\">Your deposit address</th>\r\n                      <th className=\"short-header\">Unconfirmed</th>\r\n                      <th className=\"short-header\">Confirmed*</th>\r\n                      <th className=\"short-header\">Approved</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {mintDepositAddresses.map((x) => {\r\n                      return (\r\n                        <tr key={x.depositAddress}>\r\n                          <td className=\"long-header\">{x.depositAddress}</td>\r\n                          <td className=\"short-header\">\r\n                            {fromSatoshi(x.unconfirmedAmount)}\r\n                          </td>\r\n                          <td className=\"short-header\">\r\n                            {fromSatoshi(x.depositedAmount)}\r\n                          </td>\r\n                          <td className=\"short-header\">\r\n                            {fromSatoshi(x.approvedAmount)}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n                <p className=\"mt-4\">\r\n                  <b>\r\n                    Your confirmed balance will be sent automatically to your\r\n                    SOL wallet within 24 hours.\r\n                    <br />\r\n                    Conversions require a confirmed balance of at least 100,000.\r\n                  </b>\r\n                </p>\r\n                <p>\r\n                  (* Deposits require 120 confirmations (about 2 hours).)\r\n                  <br />\r\n                  (* The amount here is after a fee deduction of 1% of total\r\n                  deposited amount)\r\n                </p>\r\n              </div>\r\n            )}\r\n          </section>\r\n\r\n          <hr />\r\n\r\n          <section className=\"section-b\">\r\n            <h3>\r\n              Convert wYerbas →{\" \"}\r\n              <a target=\"_blank\" href=\"https://yerbas.org\" rel=\"noreferrer\">\r\n                Yerbas\r\n              </a>\r\n            </h3>\r\n            {aliveNodes !== null &&\r\n              aliveNodes.length !== AUTHORITY_NODES.length && (\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>\r\n                    <b>\r\n                      Withdrawals temporarily unavailable: all authority nodes\r\n                      required to be online.\r\n                    </b>\r\n                  </span>\r\n                </p>\r\n              )}\r\n            {aliveNodes !== null &&\r\n              aliveNodes.length === AUTHORITY_NODES.length && (\r\n                <div>\r\n                  <p>\r\n                    <span style={{ color: \"red\" }}>\r\n                      IMPORTANT: Please ensure that you have entered the correct{\" \"}\r\n                      <b>\r\n                        <u>\r\n                          <a\r\n                            target=\"_blank\"\r\n                            href=\"https://yerbas.org\"\r\n                            rel=\"noreferrer\"\r\n                          >\r\n                            Yerbas\r\n                          </a>{\" \"}\r\n                          MAINNET address\r\n                        </u>\r\n                      </b>{\" \"}\r\n                      and <b>amount</b>.\r\n                    </span>\r\n                    <br />\r\n                    <span style={{ color: \"red\" }}>\r\n                      Any incorrect entry is irreversible and will not be\r\n                      refunded.\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    <a\r\n                      target=\"_blank\"\r\n                      href=\"https://yerbas.org\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      Yerbas\r\n                    </a>{\" \"}\r\n                    withdrawal address:{\" \"}\r\n                    <input\r\n                      className=\"inputlong\"\r\n                      value={burnDestination}\r\n                      onChange={onBurnDestinationChange}\r\n                      placeholder={\"(e.g. DQBx7G4aozdqYFCv2dU4kacaEcPzwg8dkZ)\"}\r\n                    ></input>\r\n                  </p>\r\n                  <p>\r\n                    wYerbas to convert:{\" \"}\r\n                    <input\r\n                      className=\"inputshort\"\r\n                      value={burnAmount}\r\n                      onChange={onBurnAmountChange}\r\n                      placeholder=\"(e.g. 123450.69)\"\r\n                    ></input>\r\n                  </p>\r\n                  <p>\r\n                    <button onClick={onBurn}>Authorize and burn</button>\r\n                  </p>\r\n                  {burnHistory === null && <div className=\"loader\"></div>}\r\n                  {burnHistory !== null && burnHistory.length > 0 && (\r\n                    <div>\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th className=\"long-header\">Withdrawal address</th>\r\n                            <th className=\"short-header\">Burned</th>\r\n                            <th className=\"short-header\">Withdrawal status</th>\r\n                            <th className=\"short-header\">Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {burnHistory.map((x) => {\r\n                            return (\r\n                              <tr key={x.burnIndex}>\r\n                                <td className=\"long-header\">\r\n                                  {x.burnDestination}\r\n                                </td>\r\n                                <td className=\"short-header\">\r\n                                  {fromSatoshi(x.burnAmount)}\r\n                                </td>\r\n                                <td className=\"short-header\">\r\n                                  {x.status === null\r\n                                    ? \"Not submitted\"\r\n                                    : x.status === \"SUBMITTED\"\r\n                                    ? \"Submitted\"\r\n                                    : x.status === \"APPROVED\"\r\n                                    ? \"Approved\"\r\n                                    : \"UNKNOWN\"}\r\n                                </td>\r\n                                <td className=\"short-header\">\r\n                                  {x.status !== null ? null : (\r\n                                    <button onClick={() => onWithdraw(x)}>\r\n                                      Submit for withdrawal\r\n                                    </button>\r\n                                  )}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                      <br />\r\n                      <p>\r\n                        <b>\r\n                          (Withdrawals may take <u>up to 24 hours</u> to\r\n                          dispense)\r\n                        </b>\r\n                      </p>\r\n                      <p>\r\n                        (Each withdrawal is subject to a fee of 1% of burned\r\n                        amount)\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n          </section>\r\n        </div>\r\n      )}\r\n      <hr />\r\n      <section className=\"section-a\">\r\n        <h3>SOL Custodian Status</h3> <br />\r\n        <h5>\r\n          Status of Authority Nodes: <br /> <br />\r\n          {aliveNodes === null && <div className=\"loader\"></div>}\r\n          <b>\r\n            {aliveNodes &&\r\n              AUTHORITY_NODES.map((x, i) => (\r\n                <span\r\n                  style={{ color: aliveNodes.includes(i) ? \"green\" : \"red\" }}\r\n                >\r\n                  [Node {5 + i}: {aliveNodes.includes(i) ? \"Up\" : \"Down\"}]{\" \"}\r\n                </span>\r\n              ))}\r\n          </b>\r\n        </h5>\r\n        {aliveNodes !== null && (\r\n          \r\n          <p><br />\r\n            (Nodes not online? Our load protection system was probably triggered\r\n            by too many of your requests. Please try again in a few minutes.)\r\n          </p>\r\n        )}\r\n        {aliveNodes !== null && stats === null && (\r\n          <div className=\"loader\"></div>\r\n        )}\r\n        {stats && (\r\n          <div>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"long-header\">\r\n                    <a\r\n                      target=\"_blank\"\r\n                      href=\"https://yerbas.org\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      Yerbas\r\n                    </a>{\" \"}\r\n                    Holdings\r\n                  </td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(\r\n                      (\r\n                        BigInt(stats.unconfirmedUtxos.totalChangeBalance) +\r\n                        BigInt(stats.unconfirmedUtxos.totalDepositsBalance)\r\n                      ).toString()\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"long-header\">wYerbas in Circulation</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(stats.confirmedDeposits.totalApprovedAmount)}\r\n                  </td>\r\n                </tr>\r\n                {\r\n                  <tr>\r\n                    <td className=\"long-header\">wYerbas Pending Mint</td>\r\n                    <td className=\"short-header\">\r\n                      {fromSatoshi(\r\n                        stats.confirmedDeposits.remainingApprovableAmount\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                }\r\n                <br />\r\n                <tr>\r\n                  <td className=\"long-header\">Yerbas Deposited</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(\r\n                      BigInt(\r\n                        stats.unconfirmedDeposits.totalDepositedAmount\r\n                      ).toString()\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"long-header\">Yerbas Withdrawn</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(stats.withdrawals.totalApprovedAmount)}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"long-header\">Yerbas Pending Withdraw</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(stats.withdrawals.remainingApprovableAmount)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SolController;\r\n","import MetaMaskOnboarding from \"@metamask/onboarding\";\r\nimport React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport BigInt from \"big-integer\";\r\nimport bs58 from \"bs58\";\r\nimport crypto from \"crypto\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst DECIMALS = 8;\r\n\r\nconst toSatoshi = (x) => {\r\n  let xs = x.toFixed(DECIMALS);\r\n  xs = xs.substr(0, xs.length - DECIMALS - 1) + xs.slice(xs.length - DECIMALS);\r\n  return xs;\r\n};\r\n\r\nconst numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nconst fromSatoshi = (xs) => {\r\n  let integer = xs.slice(0, xs.length - DECIMALS);\r\n  if (integer === \"\") {\r\n    integer = \"0\";\r\n  }\r\n\r\n  const fractional = xs.slice(xs.length - DECIMALS).padStart(DECIMALS, \"0\");\r\n  if (BigInt(fractional) >= 50000000) {\r\n    integer = (BigInt(integer) + BigInt(\"1\")).toString();\r\n  }\r\n\r\n  return integer === \"\" ? \"0\" : numberWithCommas(integer);\r\n};\r\n\r\nfunction sha256(data) {\r\n  return crypto.createHash(\"sha256\").update(data).digest();\r\n}\r\n\r\nconst isValidYerbasAddress = (x) => {\r\n  const raw = bs58.decode(x);\r\n  if (raw.length !== 25) {\r\n    return false;\r\n  }\r\n  if (raw[0] !== 140 && raw[0] !== 0x1e) {\r\n    return false;\r\n  }\r\n  const checksum = sha256(sha256(raw.slice(0, 21)));\r\n  return raw.slice(21, 25).equals(checksum.slice(0, 4));\r\n};\r\n\r\nconst AUTHORITY_NODES = [\r\n  {\r\n    location: \"n0.yerbas.org\",\r\n    port: 15430,\r\n    walletAddress: \"0x4Ba986c8112e9Ede0883aE56edA08437D943b2b7\"\r\n  },\r\n  {\r\n    location: \"n1.yerbas.org\",\r\n    port: 15430,\r\n    walletAddress: \"0x97a162F40FE98d1b03f80f0055dF24c6580fA183\"\r\n  },\r\n  {\r\n    location: \"n2.yerbas.org\",\r\n    port: 15430,\r\n    walletAddress: \"0x12d35055e8A1bd1093ECB16139c79E9Db0f6f1bd\"\r\n  },\r\n  {\r\n    location: \"n3.yerbas.org\",\r\n    port: 15430,\r\n    walletAddress: \"0xE48D61411665ee89890CD904414DEB4f37598553\"\r\n  },\r\n  {\r\n    location: \"n4.yerbas.org\",\r\n    port: 15430,\r\n    walletAddress: \"0xa0dCF63DfF6417c6CC5b1A37761F28e6a7E701E0\"\r\n  },\r\n];\r\nconst AUTHORITY_THRESHOLD = 3;\r\nconst authorityLink = (x) => {\r\n  return `https://${x.location}:${x.port}`;\r\n};\r\n\r\nconst CONTRACT_ADDRESS = \"0x2100591c0b692c53a0E11cc328646309e6ea12eF\";\r\n\r\nconst CONTRACT_ABI = [\r\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"authorityAddresses\",\r\n    outputs: [{ internalType: \"address[]\", name: \"\", type: \"address[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"authorityThreshold\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n      { internalType: \"string\", name: \"destination\", type: \"string\" },\r\n    ],\r\n    name: \"burn\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"addr\", type: \"address\" }],\r\n    name: \"burnHistory\",\r\n    outputs: [\r\n      { internalType: \"string[]\", name: \"\", type: \"string[]\" },\r\n      { internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"addr\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"burnHistory\",\r\n    outputs: [\r\n      { internalType: \"string\", name: \"\", type: \"string\" },\r\n      { internalType: \"uint256\", name: \"\", type: \"uint256\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address[]\", name: \"addrs\", type: \"address[]\" },\r\n      { internalType: \"uint256[]\", name: \"indexes\", type: \"uint256[]\" },\r\n    ],\r\n    name: \"burnHistoryMultiple\",\r\n    outputs: [\r\n      { internalType: \"string[]\", name: \"\", type: \"string[]\" },\r\n      { internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"configurationNonce\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address[]\",\r\n        name: \"newAuthorityAddresses\",\r\n        type: \"address[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"newAuthorityThreshold\",\r\n        type: \"uint256\",\r\n      },\r\n      { internalType: \"uint256\", name: \"newMinBurnAmount\", type: \"uint256\" },\r\n      { internalType: \"uint8[]\", name: \"signV\", type: \"uint8[]\" },\r\n      { internalType: \"bytes32[]\", name: \"signR\", type: \"bytes32[]\" },\r\n      { internalType: \"bytes32[]\", name: \"signS\", type: \"bytes32[]\" },\r\n    ],\r\n    name: \"configure\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"subtractedValue\", type: \"uint256\" },\r\n    ],\r\n    name: \"decreaseAllowance\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"addedValue\", type: \"uint256\" },\r\n    ],\r\n    name: \"increaseAllowance\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"minBurnAmount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"string\", name: \"depositAddress\", type: \"string\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n      { internalType: \"uint8[]\", name: \"signV\", type: \"uint8[]\" },\r\n      { internalType: \"bytes32[]\", name: \"signR\", type: \"bytes32[]\" },\r\n      { internalType: \"bytes32[]\", name: \"signS\", type: \"bytes32[]\" },\r\n    ],\r\n    name: \"mint\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"addr\", type: \"address\" },\r\n      { internalType: \"string\", name: \"depositAddress\", type: \"string\" },\r\n    ],\r\n    name: \"mintHistory\",\r\n    outputs: [\r\n      { internalType: \"uint256\", name: \"\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"\", type: \"uint256\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"addr\", type: \"address\" }],\r\n    name: \"mintNonce\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"sender\", type: \"address\" },\r\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nfunction OnboardingButton(props) {\r\n  const [buttonText, setButtonText] = React.useState(\r\n    \"Connect MetaMask wallet to convert\"\r\n  );\r\n  const [account, setAccount] = React.useState(null);\r\n  const onboarding = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (!onboarding.current) {\r\n      onboarding.current = new MetaMaskOnboarding();\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      setButtonText(\"Click here to install MetaMask!\");\r\n    }\r\n  }, [account]);\r\n\r\n  const onClick = () => {\r\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((accounts) => {\r\n          const acc = Web3.utils.toChecksumAddress(accounts[0]);\r\n          setAccount(acc);\r\n          setButtonText(acc);\r\n          if (props.onAccountChange) {\r\n            props.onAccountChange(acc);\r\n          }\r\n        });\r\n    } else {\r\n      onboarding.current.startOnboarding();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"button button3\"\r\n      disabled={account !== null ? true : false}\r\n      onClick={onClick}\r\n    >\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction BscController() {\r\n  const web3 = new Web3(\"https://bsc-dataseed4.binance.org\");\r\n  const contract = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n  async function post(link, data) {\r\n    const controller = new AbortController();\r\n    setTimeout(() => controller.abort(), 5000);\r\n    return (\r\n      await fetch(link, {\r\n        withCredentials: true,\r\n        method: \"POST\",\r\n        signal: controller.signal,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    ).json();\r\n  }\r\n\r\n  const [wallet, setWallet] = React.useState(null);\r\n  const [aliveNodes, setAliveNodes] = React.useState(null);\r\n  const randAuthorityLink = () => {\r\n    const node =\r\n      AUTHORITY_NODES[\r\n        aliveNodes[Math.floor(Math.random() * aliveNodes.length)]\r\n      ];\r\n    return `https://${node.location}:${node.port}`;\r\n  };\r\n  const stableAuthorityLink = () => {\r\n    const node = AUTHORITY_NODES[4];\r\n    return `https://${node.location}:${node.port}`;\r\n  };\r\n\r\n  const [mintDepositAddresses, setMintDepositAddresses] = React.useState([]);\r\n  const [hasMintDepositAddress, setHasMintDepositAddress] =\r\n    React.useState(null);\r\n  const [isCreatingMintDepositAddress, setIsCreatingMintDepositAddress] =\r\n    React.useState(false);\r\n\r\n  const [burnAmount, setBurnAmount] = React.useState(\"\");\r\n  const [burnDestination, setBurnDestination] = React.useState(\"\");\r\n  const [burnHistory, setBurnHistory] = React.useState(null);\r\n\r\n  const [stats, setStats] = React.useState(null);\r\n\r\n  const onAccountChange = (selectedWallet) => {\r\n    setWallet(selectedWallet);\r\n  };\r\n\r\n  const refresh = async () => {\r\n    const mintBalance = (\r\n      await post(`${randAuthorityLink()}/queryMintBalance`, {\r\n        mintAddress: wallet,\r\n      })\r\n    ).data;\r\n    if (mintBalance !== null && mintBalance !== undefined) {\r\n      setMintDepositAddresses([\r\n        {\r\n          depositAddress: mintBalance.depositAddress,\r\n          unconfirmedAmount: mintBalance.unconfirmedAmount,\r\n          depositedAmount: mintBalance.depositedAmount,\r\n          mintedAmount: mintBalance.mintedAmount,\r\n        },\r\n      ]);\r\n      setHasMintDepositAddress(true);\r\n    } else {\r\n      setMintDepositAddresses([]);\r\n      setHasMintDepositAddress(false);\r\n    }\r\n\r\n    if (aliveNodes.length === AUTHORITY_NODES.length) {\r\n      const burnHistories = (\r\n        await Promise.all(\r\n          aliveNodes\r\n            .map((i) => AUTHORITY_NODES[i])\r\n            .map((x, i) =>\r\n              post(`${authorityLink(x)}/queryBurnHistory`, {\r\n                burnAddress: wallet,\r\n              })\r\n            )\r\n        )\r\n      ).map((x) => x.data.burnHistory);\r\n      const maxLength = Math.max(...burnHistories.map((x) => x.length));\r\n\r\n      const burnHistory = [];\r\n      for (let i = 0; i < maxLength; i++) {\r\n        burnHistory.push(burnHistories.filter((x) => x.length > 0)[0][i]);\r\n        burnHistory[i].burnIndex = i;\r\n        if (\r\n          burnHistories.filter((x) => x.length > 0).length <\r\n          burnHistories.length\r\n        ) {\r\n          burnHistory[i].status = null;\r\n        } else if (\r\n          burnHistories.filter((x) => x[i].status === null).length > 0\r\n        ) {\r\n          burnHistory[i].status = null;\r\n        } else if (\r\n          burnHistories.filter((x) => x[i].status === \"SUBMITTED\").length > 0\r\n        ) {\r\n          burnHistory[i].status = \"SUBMITTED\";\r\n        } else if (\r\n          burnHistories.filter((x) => x[i].status === \"APPROVED\").length !==\r\n          burnHistories.length\r\n        ) {\r\n          throw new Error(\"Invalid burn histories\");\r\n        } else {\r\n          burnHistory[i].status = \"APPROVED\";\r\n        }\r\n      }\r\n\r\n      burnHistory.reverse();\r\n      setBurnHistory(burnHistory);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (aliveNodes === null) {\r\n        const alive = [];\r\n        for (const i in AUTHORITY_NODES) {\r\n          await post(`${authorityLink(AUTHORITY_NODES[i])}/ping`)\r\n            .then(() => {\r\n              alive.push(parseInt(i));\r\n            })\r\n            .catch(() => {});\r\n        }\r\n        setAliveNodes(alive);\r\n      }\r\n    })();\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (aliveNodes !== null && stats === null) {\r\n        const stats = (await post(`${stableAuthorityLink()}/stats`)).data;\r\n        stats.totalSupply = await contract.methods.totalSupply().call();\r\n        setStats(stats);\r\n      }\r\n    })();\r\n  }, [aliveNodes, stats]);\r\n\r\n  React.useEffect(() => {\r\n    if (wallet !== null && aliveNodes !== null) {\r\n      const refreshLoop = () => {\r\n        refresh();\r\n        setTimeout(refreshLoop, 3000);\r\n      };\r\n      refreshLoop();\r\n    }\r\n  }, [wallet, aliveNodes]);\r\n\r\n  const onCreateDepositAddress = async () => {\r\n    if (aliveNodes.length < AUTHORITY_NODES.length) {\r\n      alert(\r\n        \"Creating a deposit address requires all authority nodes to be online.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    setIsCreatingMintDepositAddress(true);\r\n    const generateDepositAddressResponses = await Promise.all(\r\n      AUTHORITY_NODES.map(async (x) => {\r\n        return await post(`${authorityLink(x)}/generateDepositAddress`, {\r\n          mintAddress: wallet,\r\n        });\r\n      })\r\n    );\r\n\r\n    const registerMintDepositAddressResponses = await Promise.all(\r\n      AUTHORITY_NODES.map(\r\n        async (x) =>\r\n          (\r\n            await post(`${authorityLink(x)}/registerMintDepositAddress`, {\r\n              mintAddress: wallet,\r\n              generateDepositAddressResponses: generateDepositAddressResponses,\r\n            })\r\n          ).data\r\n      )\r\n    );\r\n\r\n    if (\r\n      !registerMintDepositAddressResponses.every(\r\n        (x) =>\r\n          x.depositAddress ===\r\n          registerMintDepositAddressResponses[0].depositAddress\r\n      )\r\n    ) {\r\n      throw new Error(\"Consensus failure on deposit address\");\r\n    }\r\n\r\n    await refresh();\r\n    setIsCreatingMintDepositAddress(false);\r\n  };\r\n\r\n  const onMint = async (depositAddress) => {\r\n    const mintTransactionInfos = Array(AUTHORITY_NODES.length).fill(undefined);\r\n    await Promise.all(\r\n      AUTHORITY_NODES.map((x, i) => {\r\n        return post(`${authorityLink(x)}/createMintTransaction`, {\r\n          mintAddress: wallet,\r\n        })\r\n          .then((r) => {\r\n            mintTransactionInfos[i] = r.data;\r\n          })\r\n          .catch(() => {});\r\n      })\r\n    );\r\n    const availableMintTransactionInfos = mintTransactionInfos.filter(\r\n      (x) => x !== undefined\r\n    );\r\n    if (availableMintTransactionInfos.length < AUTHORITY_THRESHOLD) {\r\n      return alert(\"Failed to collect sufficient signatures for minting.\");\r\n    }\r\n    if (\r\n      !availableMintTransactionInfos.every(\r\n        (x) => x.mintAddress === availableMintTransactionInfos[0].mintAddress\r\n      )\r\n    ) {\r\n      return alert(\"Consensus failure on mint address.\");\r\n    }\r\n    if (\r\n      !availableMintTransactionInfos.every(\r\n        (x) => x.nonce === availableMintTransactionInfos[0].nonce\r\n      )\r\n    ) {\r\n      return alert(\"Consensus failure on mint nonce.\");\r\n    }\r\n    if (\r\n      !availableMintTransactionInfos.every(\r\n        (x) => x.depositAddress === depositAddress\r\n      )\r\n    ) {\r\n      return alert(\"Consensus failure on deposit address.\");\r\n    }\r\n    if (\r\n      !availableMintTransactionInfos.every(\r\n        (x) => x.mintAmount === availableMintTransactionInfos[0].mintAmount\r\n      )\r\n    ) {\r\n      return alert(\"Consensus failure on mint amount.\");\r\n    }\r\n    const mintAmount = availableMintTransactionInfos[0].mintAmount;\r\n\r\n    const signV = mintTransactionInfos.map((x) =>\r\n      x === undefined ? \"0x0\" : x.onContractVerification.v\r\n    );\r\n    const signR = mintTransactionInfos.map((x) =>\r\n      x === undefined ? \"0x0\" : x.onContractVerification.r\r\n    );\r\n    const signS = mintTransactionInfos.map((x) =>\r\n      x === undefined ? \"0x0\" : x.onContractVerification.s\r\n    );\r\n\r\n    await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [\r\n        {\r\n          from: wallet,\r\n          to: CONTRACT_ADDRESS,\r\n          data: contract.methods\r\n            .mint(depositAddress, mintAmount, signV, signR, signS)\r\n            .encodeABI(),\r\n        },\r\n      ],\r\n    });\r\n\r\n    await refresh();\r\n  };\r\n\r\n  const onBurnDestinationChange = (e) => {\r\n    setBurnDestination(e.target.value.replace(/\\s+/, \"\"));\r\n  };\r\n\r\n  const onBurnAmountChange = (e) => {\r\n    if (/^\\d*\\.?\\d{0,8}$/.test(e.target.value)) {\r\n      setBurnAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const onBurn = async () => {\r\n    if (!isValidYerbasAddress(burnDestination)) {\r\n      alert(\"Burn destination is not a valid Yerbas address!\");\r\n      return;\r\n    }\r\n\r\n    await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [\r\n        {\r\n          from: wallet,\r\n          to: CONTRACT_ADDRESS,\r\n          data: contract.methods\r\n            .burn(toSatoshi(Number(burnAmount)), burnDestination)\r\n            .encodeABI(),\r\n        },\r\n      ],\r\n    });\r\n\r\n    await refresh();\r\n  };\r\n\r\n  const onWithdraw = async (burnIndex) => {\r\n    for (const authorityNode of AUTHORITY_NODES) {\r\n      await post(`${authorityLink(authorityNode)}/submitWithdrawal`, {\r\n        burnAddress: wallet,\r\n        burnIndex: burnIndex,\r\n      });\r\n    }\r\n\r\n    await refresh();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <Container>\r\n          <a\r\n            className=\"button button1\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href=\"https://pancakeswap.finance/swap?outputCurrency=0x2100591c0b692c53a0E11cc328646309e6ea12eF&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n          >\r\n            Buy wYerbas (BSC)\r\n          </a>\r\n          <a\r\n            className=\"button button1\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href=\"https://poocoin.app/tokens/0x2100591c0b692c53a0E11cc328646309e6ea12eF\"\r\n          >\r\n            wYerbas (BSC) Price\r\n          </a>\r\n          <a\r\n            className=\"button button2\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`https://bscscan.com/token/${CONTRACT_ADDRESS}`}\r\n          >\r\n            wYerbas (BSC) Contract\r\n          </a>\r\n          <a\r\n            className=\"button button4\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href=\"https://yerbas.org\"\r\n          >\r\n            Visit Yerbas\r\n          </a>\r\n          <br />\r\n          <OnboardingButton onAccountChange={onAccountChange} />\r\n        </Container>\r\n      </header>\r\n      <br /> <br />\t\r\n      {wallet && aliveNodes && (\r\n        <div>\r\n          <section className=\"section-b\">\r\n            <h3>\r\n              Convert{\" \"}\r\n              <a target=\"_blank\" href=\"https://yerbas.org\" rel=\"noreferrer\">\r\n                Yerbas\r\n              </a>{\" \"}\r\n              → wYerbas\r\n            </h3>\r\n            {hasMintDepositAddress === null && <div className=\"loader\"></div>}\r\n            {hasMintDepositAddress === false &&\r\n              aliveNodes !== null &&\r\n              aliveNodes.length === AUTHORITY_NODES.length && (\r\n                <div>\r\n                  {!isCreatingMintDepositAddress ? (\r\n                    <p>\r\n                      <button onClick={onCreateDepositAddress}>\r\n                        Create your Yerbas deposit address\r\n                      </button>\r\n                    </p>\r\n                  ) : (\r\n                    <div className=\"loader\"></div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            {hasMintDepositAddress === false &&\r\n              aliveNodes !== null &&\r\n              aliveNodes.length !== AUTHORITY_NODES.length && (\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>\r\n                    <b>\r\n                      Temporarily unable to create deposit address: all\r\n                      authority nodes required to be online.\r\n                    </b>\r\n                  </span>\r\n                </p>\r\n              )}\r\n            {hasMintDepositAddress === true && (\r\n              <div>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"long-header\">Your deposit address</th>\r\n                      <th className=\"short-header\">Unconfirmed</th>\r\n                      <th className=\"short-header\">Confirmed*</th>\r\n                      <th className=\"short-header\">Minted</th>\r\n                      <th className=\"short-header\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {mintDepositAddresses.map((x) => {\r\n                      return (\r\n                        <tr key={x.depositAddress}>\r\n                          <td className=\"long-header\">{x.depositAddress}</td>\r\n                          <td className=\"short-header\">\r\n                            {fromSatoshi(x.unconfirmedAmount)}\r\n                          </td>\r\n                          <td className=\"short-header\">\r\n                            {fromSatoshi(x.depositedAmount)}\r\n                          </td>\r\n                          <td className=\"short-header\">\r\n                            {fromSatoshi(x.mintedAmount)}\r\n                          </td>\r\n                          <td className=\"short-header\">\r\n                            {BigInt(x.mintedAmount) <\r\n                              BigInt(x.depositedAmount) && (\r\n                              <button onClick={() => onMint(x.depositAddress)}>\r\n                                Mint balance\r\n                              </button>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n                <br />\r\n                <p>(* Deposits require 6 confirmations (about 12 minutes).)</p>\r\n                <p>\r\n                  (* The amount here is after a fee deduction of 1 Yerbas +\r\n                  1% of total deposited amount thereafter)\r\n                </p>\r\n              </div>\r\n            )}\r\n          </section>\r\n\r\n          <hr />\r\n\r\n          <section className=\"section-b\">\r\n            <h3>\r\n              Convert wYerbas →{\" \"}\r\n              <a target=\"_blank\" href=\"https://yerbas.org\" rel=\"noreferrer\">\r\n                Yerbas\r\n              </a>\r\n            </h3>\r\n            {aliveNodes !== null &&\r\n              aliveNodes.length !== AUTHORITY_NODES.length && (\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>\r\n                    <b>\r\n                      Withdrawals temporarily unavailable: all authority nodes\r\n                      required to be online.\r\n                    </b>\r\n                  </span>\r\n                </p>\r\n              )}\r\n            {aliveNodes !== null &&\r\n              aliveNodes.length === AUTHORITY_NODES.length && (\r\n                <div>\r\n                  <p>\r\n                    <span style={{ color: \"red\" }}>\r\n                      IMPORTANT: Please ensure that you have entered the correct{\" \"}\r\n                      <b>\r\n                        <u>\r\n                          <a\r\n                            target=\"_blank\"\r\n                            href=\"https://yerbas.org\"\r\n                            rel=\"noreferrer\"\r\n                          >\r\n                            Yerbas\r\n                          </a>{\" \"}\r\n                          MAINNET address\r\n                        </u>\r\n                      </b>{\" \"}\r\n                      and <b>amount</b>.\r\n                    </span>\r\n                    <br />\r\n                    <span style={{ color: \"red\" }}>\r\n                      Any incorrect entry is irreversible and will not be\r\n                      refunded.\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    <a\r\n                      target=\"_blank\"\r\n                      href=\"https://yerbas.org\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      Yerbas\r\n                    </a>{\" \"}\r\n                    withdrawal address:{\" \"}\r\n                    <input\r\n                      className=\"inputlong\"\r\n                      value={burnDestination}\r\n                      onChange={onBurnDestinationChange}\r\n                      placeHolder={\"(e.g. yWVccxoAgzPuPDkfTQDA3o252gd9ZcDEkf)\"}\r\n                    ></input>\r\n                  </p>\r\n                  <p>\r\n                    wYERBs to convert:{\" \"}\r\n                    <input\r\n                      className=\"inputshort\"\r\n                      value={burnAmount}\r\n                      onChange={onBurnAmountChange}\r\n                      placeHolder=\"(e.g. 123450.69)\"\r\n                    ></input>\r\n                  </p>\r\n                  <p>\r\n                    <button onClick={onBurn}>Authorize and burn</button>\r\n                  </p>\r\n                  {burnHistory === null && <div className=\"loader\"></div>}\r\n                  {burnHistory !== null && burnHistory.length > 0 && (\r\n                    <div>\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th className=\"long-header\">Withdrawal address</th>\r\n                            <th className=\"short-header\">Burned</th>\r\n                            <th className=\"short-header\">Withdrawal status</th>\r\n                            <th className=\"short-header\">Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {burnHistory.map((x) => {\r\n                            return (\r\n                              <tr key={x.burnIndex}>\r\n                                <td className=\"long-header\">\r\n                                  {x.burnDestination}\r\n                                </td>\r\n                                <td className=\"short-header\">\r\n                                  {fromSatoshi(x.burnAmount)}\r\n                                </td>\r\n                                <td className=\"short-header\">\r\n                                  {x.status === null\r\n                                    ? \"Not submitted\"\r\n                                    : x.status === \"SUBMITTED\"\r\n                                    ? \"Submitted\"\r\n                                    : x.status === \"APPROVED\"\r\n                                    ? \"Approved\"\r\n                                    : \"UNKNOWN\"}\r\n                                </td>\r\n                                <td className=\"short-header\">\r\n                                  {x.status !== null ? null : (\r\n                                    <button\r\n                                      onClick={() => onWithdraw(x.burnIndex)}\r\n                                    >\r\n                                      Submit for withdrawal\r\n                                    </button>\r\n                                  )}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                      <br />\r\n                      <p>\r\n                        <b>\r\n                          (Withdrawals may take <u>up to 24 hours</u> to\r\n                          dispense)\r\n                        </b>\r\n                      </p>\r\n                      <p>\r\n                        (Each withdrawal is subject to a fee of 1 Yerbas +\r\n                        1% of burned amount thereafter)\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n          </section>\r\n        </div>\r\n      )}\r\n\r\n      <hr />\r\n      <section className=\"section-a\">\r\n        <h3>BSC Custodian Status</h3> <br />\r\n        <h5>\r\n          Status of Authority Nodes: <br /> <br />\r\n          {aliveNodes === null && <div className=\"loader\"></div>}\r\n          <b>\r\n            {aliveNodes &&\r\n              AUTHORITY_NODES.map((x, i) => (\r\n                <span\r\n                  style={{ color: aliveNodes.includes(i) ? \"green\" : \"red\" }}\r\n                >\r\n                  [Node {i}: {aliveNodes.includes(i) ? \"Up\" : \"Down\"}]{\" \"}\r\n                </span>\r\n              ))}\r\n          </b>\r\n        </h5>\r\n        {aliveNodes !== null && (\r\n          <p> <br />\r\n          <small>(Nodes not online? Our load protection system was probably triggered\r\n          by too many of your requests. Please try again in a few minutes.)</small>\r\n          </p>\r\n        )}\r\n        {aliveNodes !== null && stats === null && (\r\n          <div className=\"loader\"></div>\r\n        )}\r\n       <br />\r\n        {stats && (\r\n          <div>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"long-header\">\r\n                    <a\r\n                      target=\"_blank\"\r\n                      href=\"https://yerbas.org\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      Yerbas\r\n                    </a>{\" \"}\r\n                    Holdings\r\n                  </td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(\r\n                      (\r\n                        BigInt(stats.unconfirmedUtxos.totalChangeBalance) +\r\n                        BigInt(stats.unconfirmedUtxos.totalDepositsBalance)\r\n                      ).toString()\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"long-header\">wYerbas in Circulation</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(stats.totalSupply)}\r\n                  </td>\r\n                </tr>\r\n                <br />\r\n                <tr>\r\n                  <td className=\"long-header\">Yerbas Deposited</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(\r\n                      BigInt(\r\n                        stats.unconfirmedDeposits.totalDepositedAmount\r\n                      ).toString()\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"long-header\">Yerbas Withdrawn</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(stats.withdrawals.totalApprovedAmount)}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"long-header\">Yerbas Pending Withdraw</td>\r\n                  <td className=\"short-header\">\r\n                    {fromSatoshi(\r\n                      (\r\n                        BigInt(stats.withdrawals.totalApprovableAmount) -\r\n                        BigInt(stats.withdrawals.totalApprovedAmount)\r\n                      ).toString()\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BscController;\r\n","import React from \"react\";\r\n\r\nfunction FadeInSection(props) {\r\n  const [isVisible, setVisible] = React.useState(false);\r\n  const domRef = React.useRef();\r\n  React.useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          setVisible(true);\r\n        }\r\n      });\r\n    });\r\n    observer.observe(domRef.current);\r\n    return () => {\r\n      try {\r\n        observer.unobserve(domRef.current);\r\n      } catch {}\r\n    };\r\n  }, []);\r\n  return (\r\n    <div\r\n      className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\r\n      ref={domRef}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FadeInSection;\r\n","export default __webpack_public_path__ + \"static/media/wyerb.f294ee4e.png\";","export default __webpack_public_path__ + \"static/media/splash.4bda9bc0.png\";","import \"./App.scss\";\r\nimport BscController from \"./BscController\";\r\nimport SolController from \"./SolController\";\r\n\r\n// Controls.\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Row\r\n} from \"react-bootstrap\";\r\n\r\n// Assets.\r\nimport FadeInSection from \"./FadeInSection\";\r\nimport YerbasLogo from \"./assets/img/wyerb.png\";\r\n\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport Maintenance from \"./Maintenance\";\r\n\r\nexport default function App() {\r\n\r\n\r\nconst [controller, setController] = React.useState(null);\r\n  \r\n{/* Maint Mode Toggle  'const maintenance' = -- true = on  | false = off */}\r\n  const maintenance = false; \r\n  return (\r\n    <Router>\r\n      {maintenance ? (\r\n        <Maintenance />\r\n      ) : (\r\n              <div className=\"App\">\r\n        <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\r\n          <Container>\r\n            <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\r\n              <img alt=\"\" src={YerbasLogo} />\r\n              <span>Yerbas</span>\r\n              <span className=\"navbar-brand-subtitle\"> Wrap</span>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse>\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link\r\n                href=\"https://yerbas.org\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n              <b>Yerbas.org</b>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n        <header id=\"home\" className=\"masthead\">\r\n        <Container>\r\n          {/* Desktop view */}\r\n          <div className=\"d-none d-lg-block\">\r\n            <div className=\"d-flex flex-row py-5\">\r\n              <div className=\"d-flex flex-column me-auto my-4\">\r\n                <h4 className=\"title text-center\">\r\n                  Wrap YERB with BSC\r\n                </h4>\r\n                <h6 className=\"h6 text-center\">\r\n                  Stable, Realiable & Great Exchange Rate \r\n                </h6>    \r\n              </div>\r\n            </div>\r\n           </div>\r\n          {/* Mobile */}\r\n          <div className=\"d-lg-none\">\r\n            <div className=\"d-flex flex-column py-5\">\r\n              <div className=\"d-flex flex-column me-auto mt-4 mb-auto\">\r\n                <h2 className=\"title text-center\">\r\n                  Wrap YERB with BSC\r\n                </h2><br />\r\n                <h4 className=\"text-center\">\r\n                  Stable, Realiable & Great Exchange Rate \r\n                </h4>\r\n              \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n       </header>\r\n       <section className=\"features\">\r\n        <Container className=\"py-5 mt-5\">\r\n          <FadeInSection>\r\n            <h2 className=\"mb-3 text-center\">wYerbas Custodian</h2>\r\n            <h5 className=\"mb-3 text-center\"><strong>What Are Wrapped Coins?</strong></h5>\r\n            <h5 className=\"mb-3 \">\r\n            <p>A wrapped crypto token is a converted version of a cryptocurrency or asset that functions on a network other \r\n            than the original asset’s blockchain. Each wrapped token has the same value as the asset it represents and is \r\n            easily interchangeable.</p>\r\n            <p>Wrapped Coins essentially represent crypto assets on non-native blockchains. These coins \r\n            are “wrapped” because they are inserted into a wrapper or digital vault that allows the wrapped version to operate \r\n            on a different blockchain.\r\n           </p>\r\n           </h5>\r\n            <br />\r\n            <h5 className=\"mb-3 text-center\">Exchange Rate</h5>\r\n            <br />\r\n            <h5 className=\"mb-3 text-center\">\r\n            <p className=\"mb-0\">\r\n              1 wYerbas = 1 YERB\r\n            </p>\r\n            </h5>\r\n            <br />\r\n            <h5 className=\"mb-3 text-center\">\r\n            <DropdownButton\r\n              title={\r\n                controller === null\r\n                  ? \"Select Wrapped Network\"\r\n                  : controller === \"bsc\"\r\n                  ? \"Binance Smart Chain (BSC)\"\r\n                  : \"Solana (SOL)\"\r\n              }\r\n              className=\"mb-2\"\r\n            >\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setController(\"bsc\");\r\n                }}\r\n              >\r\n                Binance Smart Chain (BSC)\r\n              </Dropdown.Item>\r\n  {/**            <Dropdown.Item\r\n                onClick={() => {\r\n                  setController(\"sol\");\r\n                }}\r\n              >\r\n                Solana (SOL)\r\n              </Dropdown.Item>*/}\r\n            </DropdownButton> \r\n          </h5>\r\n\t      </FadeInSection>\r\n        </Container>\r\n      </section>  \r\n      <section>\r\n\t\t<Container>\r\n\t\t<h5 className=\"mt-3 text-center\">\r\n        {controller === \"bsc\" && <BscController />}\r\n      \t{controller === \"sol\" && <SolController />}\r\n        </h5>\r\n        </Container>\r\n      </section>\r\n       <section className=\"section-footer text-center\">\r\n            <Row>\r\n              <span>\r\n                <b>© The Yerbas Endeavor 2022</b> \r\n              </span>\r\n            </Row>\r\n        </section>\r\n      </div>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}